#pragma once

#include <iostream>

enum class TokenType
{
	NONE,

	INSTRUCTION,
	DATA_DEFINING_INSTRUCTION,

	NUMBER,
	LOCAL_LABEL,
	GLOBAL_LABEL,
	LOCAL_LABEL_DECLARATION,
	GLOBAL_LABEL_DECLARATION,
	DATA_LABEL_DECLARATION,
	REGISTER,
	SEGMENT_REGISTER,

	COMMA,

	MEMORY_ADDRESSING,

	ARITHMETIC_BINARY_OPERATOR,
	ARITHMETIC_UNARY_OPERATOR,
	GETOFFSET_OPERATOR,
	GETPROGRAMSIZE_OPERATOR,
	GETCURRENTADDRESS_OPERATOR,
	GETSTARTADDRESS_OPERATOR,
	DUPDATA_OPERATOR,
	EQUAL_OPERATOR,
	DEFINECTCONSTANT_OPERATOR,

	LEFT_PAREN,
	RIGHT_PAREN,
	LEFT_BRACKET,
	RIGHT_BRACKET,

	END_OF_FILE,
};

enum class TokenGroup 
{
	MAIN,
	ADDITIONAL,
};

struct Token
{
	TokenType type = TokenType::NONE;
	TokenGroup group;
	uint16_t line;
	uint8_t size;
	int64_t numberValue;
	std::string stringValue;
};

